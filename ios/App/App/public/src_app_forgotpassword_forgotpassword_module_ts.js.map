{"version":3,"file":"src_app_forgotpassword_forgotpassword_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEI;AAE3D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAkB;KAC9B;CACF,CAAC;IAMW,+BAA+B,SAA/B,+BAA+B;CAAG;AAAlC,+BAA+B;IAJ3C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBH;AACM;AACmB;AAErB;AAEqC;AAEvB;IAY9C,wBAAwB,SAAxB,wBAAwB;CAAI;AAA5B,wBAAwB;IAVpC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,2FAA+B;SAChC;QACD,YAAY,EAAE,CAAC,oEAAkB,CAAC;KACnC,CAAC;GACW,wBAAwB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACpBM;AACO;AAC+B;AACT;IAM3D,kBAAkB,SAAlB,kBAAkB;IAG7B,YAAmB,QAAkB,EAC5B,GAAwB;QADd,aAAQ,GAAR,QAAQ,CAAU;QAC5B,QAAG,GAAH,GAAG,CAAqB;QAFjC,cAAS,GAAG,EAAE,CAAC;IAEsB,CAAC;IAEtC,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,qDAAS,CAAC;YAChC,KAAK,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,uEAAuE,CAAC,CAAC,CAAC;SAC/I,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;IACtB,CAAC;IAED,UAAU;QACR,IAAI,MAAM,GAAG,yBAAyB,GAAG,IAAI,CAAC,SAAS,GAAG,2CAA2C,CAAC;QACtG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,IAAI,GAAG,CAAC,SAAS,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAEpC;iBACI;gBACH,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACpC;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC;IAEJ,CAAC;CAGF;;YA5CQ,qDAAQ;YAGR,gFAAmB;;AAMf,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,2EAAyC;;KAE1C,CAAC;GACW,kBAAkB,CAmC9B;AAnC8B","sources":["./src/app/forgotpassword/forgotpassword-routing.module.ts","./src/app/forgotpassword/forgotpassword.module.ts","./src/app/forgotpassword/forgotpassword.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotpasswordPage } from './forgotpassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotpasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotpasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotpasswordPageRoutingModule } from './forgotpassword-routing.module';\n\nimport { ForgotpasswordPage } from './forgotpassword.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ForgotpasswordPageRoutingModule\n  ],\n  declarations: [ForgotpasswordPage]\n})\nexport class ForgotpasswordPageModule { }\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { InsuranceAppService } from '../services/insurance-app.service';\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.page.html',\n  styleUrls: ['./forgotpassword.page.scss'],\n})\nexport class ForgotpasswordPage implements OnInit {\n  RegisterForm: FormGroup;\n  userEmail = '';\n  constructor(public location: Location,\n    public api: InsuranceAppService) { }\n\n  ngOnInit() {\n    this.RegisterForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern(/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,3})$/)])\n    });\n  }\n\n  goback() {\n    this.location.back()\n  }\n\n  formSubmit() {\n    let myData = 'myData={\\r\\n \"email\": \"' + this.userEmail + '\",\\r\\n + \"method\": \"forgot_password\"\\r\\n}';\n    this.api.insertData(myData).subscribe((res: any) => {\n      console.log('res==', res);\n      if (res.status_no == 1) {\n        this.api.presenttoast(res.message);\n\n      }\n      else {\n        this.api.presenttoast(res.message);\n      }\n    }, (err) => {\n      console.log('err==', err);\n      this.api.presenttoast(err);\n    })\n\n  }\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}